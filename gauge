import React from 'react';
import { render, screen } from '@testing-library/react';
import '@testing-library/jest-dom';
import { describe, it, expect, vi } from 'vitest';
import BondEquity from './BondEquity';
import { Doughnut } from 'react-chartjs-2';

// Mocking react-chartjs-2
vi.mock('react-chartjs-2', () => ({
  Doughnut: vi.fn(() => <div data-testid="doughnut-chart" />)
}));

describe('BondEquity Component', () => {
  const mockData = {
    bonds: 40,
    equities: 60
  };

  it('renders the Bond Equity title', () => {
    render(<BondEquity data={mockData} />);
    expect(screen.getByText(/Bond Equity/i)).toBeInTheDocument();
  });

  it('renders the Bond Equity distribution text', () => {
    render(<BondEquity data={mockData} />);
    const distributionTextElement = screen.getByText(/Bond Equity distribution in your portfolio/i);
    expect(distributionTextElement).toBeInTheDocument();
  });

  it('renders the Doughnut chart', () => {
    render(<BondEquity data={mockData} />);
    expect(screen.getByTestId('doughnut-chart')).toBeInTheDocument();
  });

  it('checks chart data labels and datasets', () => {
    render(<BondEquity data={mockData} />);
    expect(Doughnut).toHaveBeenCalledWith(
      expect.objectContaining({
        data: expect.objectContaining({
          labels: ['Bonds', 'Equities'],
          datasets: expect.arrayContaining([
            expect.objectContaining({
              data: [mockData.bonds, mockData.equities],
            })
          ])
        }),
      }),
      expect.anything()
    );
  });
});