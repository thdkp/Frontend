import React, { useState, useEffect } from 'react';

const App = () => {
  const [darkMode, setDarkMode] = useState(false);
  const [sidebarOpen, setSidebarOpen] = useState(false);

  const sections = [
    { id: 'introduction', title: 'Introduction', 
      content: [
        "Welcome to the Portfolio Optimization page.",
        "This section covers the introduction to portfolio optimization.",
      ]
    },
    { id: 'theory', title: 'Theory', 
      content: [
        "Theory of portfolio optimization involves...",
        "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
      ]
    },
    { id: 'implementation', title: 'Implementation', 
      content: [
        "Implementation details.",
        "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
      ]
    },
    { id: 'results', title: 'Results', 
      content: [
        "Results of portfolio optimization.",
        "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
      ]
    },
    { id: 'conclusion', title: 'Conclusion', 
      content: [
        "Conclusion of portfolio optimization.",
        "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
      ]
    },
  ];

  useEffect(() => {
    if (darkMode) {
      document.documentElement.classList.add('dark');
    } else {
      document.documentElement.classList.remove('dark');
    }
  }, [darkMode]);

  return (
    <div className="flex h-screen overflow-hidden bg-gray-100 dark:bg-gray-900 text-gray-900 dark:text-gray-100">
      {/* Sidebar */}
      <aside className={`fixed inset-y-0 left-0 w-64 bg-gray-200 dark:bg-gray-800 p-4 overflow-y-auto transform ${sidebarOpen ? 'translate-x-0 ease-in' : '-translate-x-full ease-out'} transition-transform md:relative md:translate-x-0 md:sticky md:top-0`}>
        <div className="flex items-center justify-between mb-4 md:hidden">
          <h1 className="text-2xl font-bold">Portfolio Optimization</h1>
          <button 
            onClick={() => setSidebarOpen(!sidebarOpen)} 
            className="p-2 rounded-md bg-gray-300 dark:bg-gray-700"
          >
            {sidebarOpen ? 'Close Menu' : 'Open Menu'}
          </button>
        </div>
        <nav className="md:block md:pb-0 md:overflow-y-auto">
          <ul>
            {sections.map(section => (
              <li key={section.id}>
                <a href={`#${section.id}`} onClick={() => setSidebarOpen(false)} className="block py-2 px-4 rounded hover:bg-gray-300 dark:hover:bg-gray-700">{section.title}</a>
              </li>
            ))}
          </ul>
        </nav>
      </aside>

      {/* Main content */}
      <div className="flex-1 overflow-y-auto p-4 md:p-8">
        <header className="flex justify-between items-center mb-4">
          <h1 className="text-3xl font-bold">Portfolio Optimization</h1>
        </header>
        <main>
          {sections.map(section => (
            <section key={section.id} id={section.id} className="mb-8">
              <h2 className="text-xl font-bold mb-4">{section.title}</h2>
              {section.content && section.content.map((paragraph, index) => (
                <p key={index} className="mb-4">{paragraph}</p>
              ))}
            </section>
          ))}
        </main>
      </div>

      {/* Dark mode toggle */}
      <div className="fixed bottom-4 right-4">
        <button 
          onClick={() => setDarkMode(!darkMode)} 
          className="p-2 rounded-md bg-gray-300 dark:bg-gray-700 mr-4"
        >
          {darkMode ? 'Switch to Light Mode' : 'Switch to Dark Mode'}
        </button>
      </div>
    </div>
  );
}

export default App;