import React from 'react';
import { render, screen, fireEvent } from '@testing-library/react';
import { Provider } from 'react-redux';
import { BrowserRouter as Router } from 'react-router-dom';
import configureStore from 'redux-mock-store';
import AllotedStockTable from './AllotedStockTable';
import { selectIsDarkMode } from '../../redux/slices/themeSlice';
import { vi } from 'vitest';

// Mock the necessary redux slice selector
vi.mock('../../redux/slices/themeSlice', () => ({
  selectIsDarkMode: vi.fn(),
}));

// Mock the navigate function
vi.mock('react-router-dom', async () => {
  const actual = await vi.importActual('react-router-dom');
  return {
    ...actual,
    useNavigate: () => vi.fn(),
  };
});

const mockStore = configureStore([]);

describe('AllotedStockTable', () => {
  let store;
  const stocks = [
    { stocksymbol: 'AAPL', closingprice: 150, allocation: 50 },
    { stocksymbol: 'GOOGL', closingprice: 2800, allocation: 30 },
  ];

  beforeEach(() => {
    store = mockStore({
      theme: { isDarkMode: false },
    });
    selectIsDarkMode.mockReturnValue(false);
  });

  test('renders the table headers correctly', () => {
    render(
      <Provider store={store}>
        <Router>
          <AllotedStockTable stocks={stocks} />
        </Router>
      </Provider>
    );

    expect(screen.getByText('Stock Symbol')).toBeInTheDocument();
    expect(screen.getByText('Stock Price(in $)')).toBeInTheDocument();
    expect(screen.getByText('Percent Allocation')).toBeInTheDocument();
  });

  test('renders the table rows correctly', () => {
    render(
      <Provider store={store}>
        <Router>
          <AllotedStockTable stocks={stocks} />
        </Router>
      </Provider>
    );

    expect(screen.getByText('AAPL')).toBeInTheDocument();
    expect(screen.getByText('150')).toBeInTheDocument();
    expect(screen.getByText('50')).toBeInTheDocument();

    expect(screen.getByText('GOOGL')).toBeInTheDocument();
    expect(screen.getByText('2800')).toBeInTheDocument();
    expect(screen.getByText('30')).toBeInTheDocument();
  });

  test('handles row click navigation', () => {
    const navigate = vi.fn();
    vi.mock('react-router-dom', async () => {
      const actual = await vi.importActual('react-router-dom');
      return {
        ...actual,
        useNavigate: () => navigate,
      };
    });

    render(
      <Provider store={store}>
        <Router>
          <AllotedStockTable stocks={stocks} />
        </Router>
      </Provider>
    );

    fireEvent.click(screen.getByText('AAPL'));
    expect(navigate).toHaveBeenCalledWith('/stockdetails/AAPL');
  });
});