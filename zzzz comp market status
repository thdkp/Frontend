import React from 'react';
import { render, screen } from '@testing-library/react';
import { useSelector } from 'react-redux';
import MarketStatus from './MarketStatus';
import { vi } from 'vitest';

// Mock the Redux selector
vi.mock('react-redux', () => ({
  ...vi.importActual('react-redux'),
  useSelector: vi.fn(),
}));

describe('MarketStatus', () => {
  beforeEach(() => {
    useSelector.mockImplementation(callback => callback({
      theme: {
        isDarkMode: false,
      },
    }));
  });

  afterEach(() => {
    vi.clearAllMocks();
  });

  test('renders market status data correctly', () => {
    render(<MarketStatus />);

    expect(screen.getByText('S&P 500 Index')).toBeInTheDocument();
    expect(screen.getByText('4158.24')).toBeInTheDocument();
    expect(screen.getByText('DJI')).toBeInTheDocument();
    expect(screen.getByText('73961.31')).toBeInTheDocument();
    expect(screen.getByText('IXIC')).toBeInTheDocument();
    expect(screen.getByText('11102.45')).toBeInTheDocument();
    expect(screen.getByText('RUT')).toBeInTheDocument();
    expect(screen.getByText('2297.19')).toBeInTheDocument();
    expect(screen.getByText('NYA')).toBeInTheDocument();
    expect(screen.getByText('13798.26')).toBeInTheDocument();
    expect(screen.getByText('W5000')).toBeInTheDocument();
    expect(screen.getByText('38138.28')).toBeInTheDocument();
    expect(screen.getByText('Portfolio Optimizer')).toBeInTheDocument();
  });

  test('applies dark mode styles correctly', () => {
    useSelector.mockImplementation(callback => callback({
      theme: {
        isDarkMode: true,
      },
    }));

    const { container } = render(<MarketStatus />);

    expect(container.firstChild).toHaveClass('bg-zinc-300');
    expect(screen.getByText('S&P 500 Index').parentElement).toHaveClass('text-white');
  });

  test('applies light mode styles correctly', () => {
    useSelector.mockImplementation(callback => callback({
      theme: {
        isDarkMode: false,
      },
    }));

    const { container } = render(<MarketStatus />);

    expect(container.firstChild).toHaveClass('bg-gray-900');
    expect(screen.getByText('S&P 500 Index').parentElement).toHaveClass('text-white');
  });
});