import React from 'react';
import { render, screen } from '@testing-library/react';
import { Provider } from 'react-redux';
import { configureStore } from '@reduxjs/toolkit';
import { describe, it, expect, vi } from 'vitest';
import Home from '../components/Home';
import themeReducer from '../redux/slices/themeSlice';

const mockStore = configureStore({
  reducer: {
    theme: themeReducer,
  },
  preloadedState: {
    theme: {
      isDarkMode: false,
    },
  },
});

vi.mock('../components/MarketStatus', () => ({
  default: vi.fn(() => <div>MarketStatus Component</div>),
}));

vi.mock('../components/MarketSectors', () => ({
  default: vi.fn(() => <div>MarketSectors Component</div>),
}));

vi.mock('../components/GetStarted', () => ({
  default: vi.fn(() => <div>GetStarted Component</div>),
}));

vi.mock('../components/News', () => ({
  default: vi.fn(() => <div>News Component</div>),
}));

vi.mock('../components/TodaysStocks', () => ({
  default: vi.fn(() => <div>TodaysStocks Component</div>),
}));

describe('Home Component', () => {
  it('renders without crashing', () => {
    render(
      <Provider store={mockStore}>
        <Home />
      </Provider>
    );

    expect(screen.getByText('MarketStatus Component')).toBeTruthy();
    expect(screen.getByText('MarketSectors Component')).toBeTruthy();
    expect(screen.getByText('GetStarted Component')).toBeTruthy();
    expect(screen.getByText('News Component')).toBeTruthy();
    expect(screen.getByText('TodaysStocks Component')).toBeTruthy();
  });

  it('renders with dark mode', () => {
    const darkModeStore = configureStore({
      reducer: {
        theme: themeReducer,
      },
      preloadedState: {
        theme: {
          isDarkMode: true,
        },
      },
    });

    render(
      <Provider store={darkModeStore}>
        <Home />
      </Provider>
    );

    expect(screen.getByText('MarketStatus Component')).toBeTruthy();
    expect(screen.getByText('MarketSectors Component')).toBeTruthy();
    expect(screen.getByText('GetStarted Component')).toBeTruthy();
    expect(screen.getByText('News Component')).toBeTruthy();
    expect(screen.getByText('TodaysStocks Component')).toBeTruthy();

    const container = screen.getByTestId('home-container');
    expect(container).toHaveClass('dark:bg-gray-900');
  });
});